package defpackage;

import com.hdrindicator.DisplayHelper;

/* renamed from: ag  reason: default package */
/* loaded from: classes.dex */
public final class Constraint {
    public int mWidth;
    public int mHeight;
    int mViewId;
    boolean mIsGuideline = false;
    public int guideBegin = -1;
    public int guideEnd = -1;
    public float guidePercent = -1.0f;
    public int leftToLeft = -1;
    public int leftToRight = -1;
    public int rightToLeft = -1;
    public int rightToRight = -1;
    public int topToTop = -1;
    public int topToBottom = -1;
    public int bottomToTop = -1;
    public int bottomToBottom = -1;
    public int baselineToBaseline = -1;
    public int startToEnd = -1;
    public int startToStart = -1;
    public int endToStart = -1;
    public int endToEnd = -1;
    public float horizontalBias = 0.5f;
    public float verticalBias = 0.5f;
    public String dimensionRatio = null;
    public int editorAbsoluteX = -1;
    public int editorAbsoluteY = -1;
    public int orientation = -1;
    public int leftMargin = -1;
    public int rightMargin = -1;
    public int topMargin = -1;
    public int bottomMargin = -1;
    public int endMargin = -1;
    public int startMargin = -1;
    public int visibility = 0;
    public int goneLeftMargin = -1;
    public int goneTopMargin = -1;
    public int goneRightMargin = -1;
    public int goneBottomMargin = -1;
    public int goneEndMargin = -1;
    public int goneStartMargin = -1;
    public float verticalWeight = DisplayHelper.DENSITY;
    public float horizontalWeight = DisplayHelper.DENSITY;
    public int horizontalChainStyle = 0;
    public int verticalChainStyle = 0;
    public float alpha = 1.0f;
    public boolean applyElevation = false;
    public float elevation = DisplayHelper.DENSITY;
    public float rotationX = DisplayHelper.DENSITY;
    public float rotationY = DisplayHelper.DENSITY;
    public float scaleX = 1.0f;
    public float scaleY = 1.0f;
    public float transformPivotX = DisplayHelper.DENSITY;
    public float transformPivotY = DisplayHelper.DENSITY;
    public float translationX = DisplayHelper.DENSITY;
    public float translationY = DisplayHelper.DENSITY;
    public float translationZ = DisplayHelper.DENSITY;
    public int ad = -1;
    public int ae = -1;
    public int af = -1;
    public int ag = -1;
    public int ah = -1;
    public int ai = -1;

    public final void a(af afVar) {
        afVar.d = this.leftToLeft;
        afVar.e = this.leftToRight;
        afVar.f = this.rightToLeft;
        afVar.g = this.rightToRight;
        afVar.h = this.topToTop;
        afVar.i = this.topToBottom;
        afVar.j = this.bottomToTop;
        afVar.k = this.bottomToBottom;
        afVar.l = this.baselineToBaseline;
        afVar.m = this.startToEnd;
        afVar.n = this.startToStart;
        afVar.o = this.endToStart;
        afVar.p = this.endToEnd;
        afVar.leftMargin = this.leftMargin;
        afVar.rightMargin = this.rightMargin;
        afVar.topMargin = this.topMargin;
        afVar.bottomMargin = this.bottomMargin;
        afVar.u = this.goneStartMargin;
        afVar.v = this.goneEndMargin;
        afVar.w = this.horizontalBias;
        afVar.x = this.verticalBias;
        afVar.y = this.dimensionRatio;
        afVar.K = this.editorAbsoluteX;
        afVar.L = this.editorAbsoluteY;
        afVar.B = this.verticalWeight;
        afVar.A = this.horizontalWeight;
        afVar.D = this.verticalChainStyle;
        afVar.C = this.horizontalChainStyle;
        afVar.E = this.ad;
        afVar.F = this.ae;
        afVar.I = this.af;
        afVar.J = this.ag;
        afVar.G = this.ah;
        afVar.H = this.ai;
        afVar.M = this.orientation;
        afVar.c = this.guidePercent;
        afVar.a = this.guideBegin;
        afVar.b = this.guideEnd;
        afVar.width = this.mWidth;
        afVar.height = this.mHeight;
        afVar.setMarginStart(this.startMargin);
        afVar.setMarginEnd(this.endMargin);
        afVar.a();
    }

    public final /* bridge */ /* synthetic */ Object clone() {
        Constraint constraintVar = new Constraint();
        constraintVar.mIsGuideline = this.mIsGuideline;
        constraintVar.mWidth = this.mWidth;
        constraintVar.mHeight = this.mHeight;
        constraintVar.guideBegin = this.guideBegin;
        constraintVar.guideEnd = this.guideEnd;
        constraintVar.guidePercent = this.guidePercent;
        constraintVar.leftToLeft = this.leftToLeft;
        constraintVar.leftToRight = this.leftToRight;
        constraintVar.rightToLeft = this.rightToLeft;
        constraintVar.rightToRight = this.rightToRight;
        constraintVar.topToTop = this.topToTop;
        constraintVar.topToBottom = this.topToBottom;
        constraintVar.bottomToTop = this.bottomToTop;
        constraintVar.bottomToBottom = this.bottomToBottom;
        constraintVar.baselineToBaseline = this.baselineToBaseline;
        constraintVar.startToEnd = this.startToEnd;
        constraintVar.startToStart = this.startToStart;
        constraintVar.endToStart = this.endToStart;
        constraintVar.endToEnd = this.endToEnd;
        constraintVar.horizontalBias = this.horizontalBias;
        constraintVar.verticalBias = this.verticalBias;
        constraintVar.dimensionRatio = this.dimensionRatio;
        constraintVar.editorAbsoluteX = this.editorAbsoluteX;
        constraintVar.editorAbsoluteY = this.editorAbsoluteY;
        constraintVar.horizontalBias = this.horizontalBias;
        constraintVar.horizontalBias = this.horizontalBias;
        constraintVar.horizontalBias = this.horizontalBias;
        constraintVar.horizontalBias = this.horizontalBias;
        constraintVar.horizontalBias = this.horizontalBias;
        constraintVar.orientation = this.orientation;
        constraintVar.leftMargin = this.leftMargin;
        constraintVar.rightMargin = this.rightMargin;
        constraintVar.topMargin = this.topMargin;
        constraintVar.bottomMargin = this.bottomMargin;
        constraintVar.endMargin = this.endMargin;
        constraintVar.startMargin = this.startMargin;
        constraintVar.visibility = this.visibility;
        constraintVar.goneLeftMargin = this.goneLeftMargin;
        constraintVar.goneTopMargin = this.goneTopMargin;
        constraintVar.goneRightMargin = this.goneRightMargin;
        constraintVar.goneBottomMargin = this.goneBottomMargin;
        constraintVar.goneEndMargin = this.goneEndMargin;
        constraintVar.goneStartMargin = this.goneStartMargin;
        constraintVar.verticalWeight = this.verticalWeight;
        constraintVar.horizontalWeight = this.horizontalWeight;
        constraintVar.horizontalChainStyle = this.horizontalChainStyle;
        constraintVar.verticalChainStyle = this.verticalChainStyle;
        constraintVar.alpha = this.alpha;
        constraintVar.applyElevation = this.applyElevation;
        constraintVar.elevation = this.elevation;
        constraintVar.rotationX = this.rotationX;
        constraintVar.rotationY = this.rotationY;
        constraintVar.scaleX = this.scaleX;
        constraintVar.scaleY = this.scaleY;
        constraintVar.transformPivotX = this.transformPivotX;
        constraintVar.transformPivotY = this.transformPivotY;
        constraintVar.translationX = this.translationX;
        constraintVar.translationY = this.translationY;
        constraintVar.translationZ = this.translationZ;
        constraintVar.ad = this.ad;
        constraintVar.ae = this.ae;
        constraintVar.af = this.af;
        constraintVar.ag = this.ag;
        constraintVar.ah = this.ah;
        constraintVar.ai = this.ai;
        return constraintVar;
    }
}
